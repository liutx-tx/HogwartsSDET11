# # Generated by Selenium IDE
# import pytest
# import time
# import json
# from selenium import webdriver
# from selenium.webdriver.common.by import By
# from selenium.webdriver.common.action_chains import ActionChains
# from selenium.webdriver.support import expected_conditions
# from selenium.webdriver.support.wait import WebDriverWait
# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
#
#
#
#
# class TestHogwarts():
#
#     # def __init__(self):
#     #     # 元素定位
#     #     self._baidu_css = 'title media-heading'
#
#     def setup_method(self, method):
#         self.driver = webdriver.Chrome()
#         pass
#
#     #     self.vars = {}
#     #
#     # def teardown_method(self, method):
#     #      self.driver.quit()
#
#     def test_search(self):
#         self.driver.get("https://testerhome.com/")
#         self.driver.set_window_size(1880, 1000)
#         #隐式等待
#         self.driver.implicitly_wait(5)
#         #显示等待
#         WebDriverWait(self.driver,10).until(expected_conditions.element_to_be_clickable)
#         # self.driver.find_element(By.NAME, "q").click()
#         # self.driver.find_element(By.NAME, "q").send_keys("appium")
#         # self.driver.find_element(By.NAME, "q").send_keys(Keys.ENTER)
#         self.driver.find_element_by_link_text("社团").click()
#         time.sleep(2)
#         self.driver.find_element_by_class_name("team-name").click()
#         self.driver.find_element_by_css_selector(self._baidu_css[0]).click()
#
#
# if __name__ == '__main__':
#     pytest.main()
from turtle import pd


def caseTest():
    new_price = {}
    old_price = {}
    dif = []

    res1 = pd.read_excel('price.xlsx',sheet_name='价格调整',encoding='utf-8')
    res2 = pd.read_excel('data2.xlsx', sheet_name='0', encoding='utf-8')
    for code,price in zip(res1['barcode'],res1['prices']):
        new_price[code] = str(price)
    for code,price in zip(res2['barcode'],res2['prices']):
        old_price[code] = str(price)

    # print(new_price)
    # print(old_price)
    for key,val in new_price.items():
        old_val = old_price.get(key)
        if val == old_val:
            pass
        else:
            dif.append({'code':key,'new_price':val,'old_price':old_val})

    for i in dif:
        print(i)